x-common: &common # restart: unless-stopped
  logging:
    options:
      max-size: 50m
      max-file: "3"
x-clickhouse-defaults: &clickhouse-defaults
  <<: *common
  # addding non LTS version due to this fix https://github.com/ClickHouse/ClickHouse/commit/32caf8716352f45c1b617274c7508c86b7d1afab
  image: clickhouse/clickhouse-server:24.1.2-alpine
  tty: true
  labels:
    signoz.io/scrape: "true"
    signoz.io/port: "9363"
    signoz.io/path: "/metrics"
  depends_on:
    init-clickhouse:
      condition: service_completed_successfully
    zookeeper-1:
      condition: service_healthy
  healthcheck:
    test:
      - CMD
      - wget
      - --spider
      - -q
      - 0.0.0.0:8123/ping
    interval: 30s
    timeout: 5s
    retries: 3
  ulimits:
    nproc: 65535
    nofile:
      soft: 262144
      hard: 262144
x-zookeeper-defaults: &zookeeper-defaults
  <<: *common
  image: bitnami/zookeeper:3.7.1
  user: root
  labels:
    signoz.io/scrape: "true"
    signoz.io/port: "9141"
    signoz.io/path: "/metrics"
  healthcheck:
    test:
      - CMD-SHELL
      - curl -s -m 2 http://localhost:8080/commands/ruok | grep error | grep null
    interval: 30s
    timeout: 5s
    retries: 3
x-db-depend: &db-depend
  <<: *common
  depends_on:
    clickhouse:
      condition: service_healthy
    schema-migrator-sync:
      condition: service_completed_successfully
services:
  init-clickhouse:
    <<: *common
    image: clickhouse/clickhouse-server:24.1.2-alpine
    command:
      - bash
      - -c
      - |
        version="v0.0.1"
        node_os=$$(uname -s | tr '[:upper:]' '[:lower:]')
        node_arch=$$(uname -m | sed s/aarch64/arm64/ | sed s/x86_64/amd64/)
        echo "Fetching histogram-binary for $${node_os}/$${node_arch}"
        cd /tmp
        wget -O histogram-quantile.tar.gz "https://github.com/SigNoz/signoz/releases/download/histogram-quantile%2F$${version}/histogram-quantile_$${node_os}_$${node_arch}.tar.gz"
        tar -xvzf histogram-quantile.tar.gz
        mv histogram-quantile /var/lib/clickhouse/user_scripts/histogramQuantile
    # restart: on-failure
    volumes:
      - ./signoz/clickhouse/user_scripts:/var/lib/clickhouse/user_scripts/
  zookeeper-1:
    <<: *zookeeper-defaults
    volumes:
      - zookeeper-1:/bitnami/zookeeper
    environment:
      - ZOO_SERVER_ID=1
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_AUTOPURGE_INTERVAL=1
      - ZOO_ENABLE_PROMETHEUS_METRICS=yes
      - ZOO_PROMETHEUS_METRICS_PORT_NUMBER=9141
  clickhouse:
    <<: *clickhouse-defaults
    volumes:
      - ./signoz/clickhouse/config.xml:/etc/clickhouse-server/config.xml
      - ./signoz/clickhouse/users.xml:/etc/clickhouse-server/users.xml
      - ./signoz/clickhouse/custom-function.xml:/etc/clickhouse-server/custom-function.xml
      - ./signoz/clickhouse/user_scripts:/var/lib/clickhouse/user_scripts/
      - ./signoz/clickhouse/cluster.xml:/etc/clickhouse-server/config.d/cluster.xml
      - clickhouse:/var/lib/clickhouse/
  signoz:
    <<: *db-depend
    image: signoz/signoz:${VERSION:-v0.90.1}
    command:
      - --config=/root/config/prometheus.yml
    ports:
      - "${SIGNOZ_PUBLISH_PORT:-8080}:8080" # signoz admin port
    volumes:
      - ./signoz/signoz/prometheus.yml:/root/config/prometheus.yml
      - ./signoz/dashboards:/root/config/dashboards
      - sqlite:/var/lib/signoz/
    environment:
      - SIGNOZ_ALERTMANAGER_PROVIDER=signoz
      - SIGNOZ_TELEMETRYSTORE_CLICKHOUSE_DSN=tcp://clickhouse:9000
      - SIGNOZ_SQLSTORE_SQLITE_PATH=/var/lib/signoz/signoz.db
      - DASHBOARDS_PATH=/root/config/dashboards
      - STORAGE=clickhouse
      - GODEBUG=netdns=go
      - TELEMETRY_ENABLED=true
      - DEPLOYMENT_TYPE=docker-standalone-amd
      - DOT_METRICS_ENABLED=true
    healthcheck:
      test:
        - CMD
        - wget
        - --spider
        - -q
        - localhost:8080/api/v1/health
      interval: 30s
      timeout: 5s
      retries: 3
  otel:
    <<: *db-depend
    image: signoz/signoz-otel-collector:${OTELCOL_TAG:-v0.128.2}
    command:
      - --config=/etc/otel-collector-config.yaml
      - --manager-config=/etc/manager-config.yaml
      - --copy-path=/var/tmp/collector-config.yaml
      - --feature-gates=-pkg.translator.prometheus.NormalizeName
    volumes:
      - ./signoz/otel-collector-config.yaml:/etc/otel-collector-config.yaml
      - ./signoz/signoz/otel-collector-opamp-config.yaml:/etc/manager-config.yaml
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=host.name=signoz-host,os.type=linux
      - DOCKER_MULTI_NODE_CLUSTER=false
      - LOW_CARDINAL_EXCEPTION_GROUPING=false
    ports:
      - "${OTEL_EXPORTER_PUBLISH_PORT:-4318}:4318" # OTLP HTTP receiver
    depends_on:
      signoz:
        condition: service_healthy
  schema-migrator-sync:
    <<: *common
    image: signoz/signoz-schema-migrator:${OTELCOL_TAG:-v0.128.2}
    command:
      - sync
      - --dsn=tcp://clickhouse:9000
      - --up=
    depends_on:
      clickhouse:
        condition: service_healthy
    # restart: on-failure
  schema-migrator-async:
    <<: *db-depend
    image: signoz/signoz-schema-migrator:${OTELCOL_TAG:-v0.128.2}
    command:
      - async
      - --dsn=tcp://clickhouse:9000
      - --up=
    # restart: on-failure

  # Log collection service - forwards container logs to otel-collector
  logspout:
    <<: *common
    image: gliderlabs/logspout:v3.2.14
    command: syslog+tcp://otel:2255?filter.labels=my-app-logs:1753272418
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      signoz.io/ignore: "true"
    depends_on:
      otel:
        condition: service_started
    environment:
      - EXCLUDE_LABEL=signoz.io/ignore=true
      - LOGSPOUT=ignore
    restart: on-failure

volumes:
  clickhouse:
  sqlite:
  zookeeper-1:
